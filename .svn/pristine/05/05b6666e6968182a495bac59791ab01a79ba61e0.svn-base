import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Scanner;

import java.io.*;
import java.nio.file.Files;
import java.util.Scanner;


public class Client {

    public static void main(String[] args) throws Exception {

        Parser parser = new Parser();

        if (args.length != 1) {
            System.err.println("Pass the server IP as the sole command line argument");
            return;
        }
        
        // for(int i=0;i<3;i++) {
            try {
                var socket = new Socket(args[0], 59898);
                System.out.println("Reading lines. Ctrl+D or Ctrl+C to quit");

                var in = new Scanner(socket.getInputStream());
                var out = new PrintWriter(socket.getOutputStream(), true);
                out.println("GET");
                // out.println(parser.parse("content1.txt"));
                System.out.println(in.nextLine());

                while (in.hasNextLine()) {

                    parser.parseXml(in.nextLine());

                    // System.out.println(in.nextLine());
                }

            }
            catch (Exception e) {
                System.out.println(e);
            }

            // Thread.sleep(5000);
            // System.out.println("Restarting client");
        }

        // System.out.println("The server is not responding!!");
    }
// }


// import java.io.IOException;
// import java.io.InputStreamReader;
// import java.io.PrintWriter;
// import java.net.Socket;
// import java.util.Scanner;

// public class Client {
//     public static void main(String[] args) throws Exception {
//         if (args.length != 1) {
//             System.err.println("Pass the server IP as the sole command line argument");
//             return;
//         }
//         try (var socket = new Socket(args[0], 59898)) {
//             System.out.println("Enter lines of text then Ctrl+D or Ctrl+C to quit");
//             var scanner = new Scanner(System.in);
//             var in = new Scanner(socket.getInputStream());
//             var out = new PrintWriter(socket.getOutputStream(), true);
//             while (scanner.hasNextLine()) {
//                 out.println(scanner.nextLine());
//                 System.out.println(in.nextLine());
//             }
//         }
//     }
// }